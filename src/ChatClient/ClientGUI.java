/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ChatClient;

import chatassignment.MessageListener;
import chatassignment.ChatMessage;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author K00202323
 * 
 * GUI For client side application
 * 
 */
public class ClientGUI extends javax.swing.JFrame implements MessageListener{

    /**
     * Creates new form ClientGUI
     */
    
    protected Client Client = null;
    protected Mic mic = null;
    protected Speaker speakers = null;
    
    public ClientGUI() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        CardLayout cl = (CardLayout)(cards.getLayout());
        cl.show(cards, "cardLogin");
    }
    
    public void MessageRecieved(ChatMessage msg)
    {
        /*Event to handle recieveing messages in the Client Control Thread*/
        
        if(msg.TYPE == ChatMessage.MessageType.MESSAGE)
        {
            String message = msg.User + ": " + msg.GetMessage() + "\n";
            chatView.append(message);
        }
        else if(msg.TYPE == ChatMessage.MessageType.CONNECT)
        {
            chatView.append(msg.User + " joined.\n");
        }
        else if( msg.TYPE == ChatMessage.MessageType.DISCONNECT)
        {
            chatView.append(msg.User + " left the chat.\n");
        }
        else if(msg.TYPE == ChatMessage.MessageType.AUDIO)
        {
            System.out.println("Client Got audio from server..");
            //play the audio from the byte array
            this.speakers.Playback(msg.GetAudioData());
        }
        else if(msg.TYPE == ChatMessage.MessageType.NAMECHANGE)
        {
            //Username collision, update the name clientside and inform client
            chatView.append("Username taken. You are now known as " + msg.User + "\n");
            this.Client.UpdateUsername(msg.User);
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cards = new javax.swing.JPanel();
        cardMain = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatView = new javax.swing.JTextArea();
        inputMessage = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnSendMsg = new javax.swing.JButton();
        btnAudioMSG = new javax.swing.JButton();
        cardLogin = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        inputAddr = new javax.swing.JTextField();
        inputPort = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        cards.setLayout(new java.awt.CardLayout());

        chatView.setColumns(20);
        chatView.setLineWrap(true);
        chatView.setRows(5);
        jScrollPane1.setViewportView(chatView);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Chat", jPanel3);

        inputMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputMessageKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 324, Short.MAX_VALUE)
        );

        btnSendMsg.setText("Send");
        btnSendMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendMsgActionPerformed(evt);
            }
        });

        btnAudioMSG.setText("Record");
        btnAudioMSG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAudioMSGMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAudioMSGMouseReleased(evt);
            }
        });
        btnAudioMSG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAudioMSGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardMainLayout = new javax.swing.GroupLayout(cardMain);
        cardMain.setLayout(cardMainLayout);
        cardMainLayout.setHorizontalGroup(
            cardMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(inputMessage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cardMainLayout.createSequentialGroup()
                        .addComponent(btnSendMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAudioMSG))
                    .addGroup(cardMainLayout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        cardMainLayout.setVerticalGroup(
            cardMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cardMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSendMsg)
                    .addComponent(btnAudioMSG))
                .addGap(0, 23, Short.MAX_VALUE))
        );

        cards.add(cardMain, "cardMain");

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Username");

        inputAddr.setText("127.0.0.1");

        inputPort.setText("4314");
        inputPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputPortKeyTyped(evt);
            }
        });

        jLabel2.setText("Host Address");

        jLabel3.setText("Port");

        inputName.setText("Anon");

        javax.swing.GroupLayout cardLoginLayout = new javax.swing.GroupLayout(cardLogin);
        cardLogin.setLayout(cardLoginLayout);
        cardLoginLayout.setHorizontalGroup(
            cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLoginLayout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(cardLoginLayout.createSequentialGroup()
                            .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(inputAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(inputPort, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel1)
                        .addComponent(inputName)))
                .addContainerGap(306, Short.MAX_VALUE))
        );
        cardLoginLayout.setVerticalGroup(
            cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLoginLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(cardLoginLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cardLoginLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        cards.add(cardLogin, "cardLogin");

        getContentPane().add(cards, "card4");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        //Join button on login panel - opens main chat panel
        // also sets up background threads (Mic, Speakers, ClientConnection)
        
        String addr = inputAddr.getText();
        int port = Integer.parseInt(inputPort.getText());
        String usr = inputName.getText();
        
        if(usr.isEmpty() || addr.isEmpty() || port <= 0)
        {
            JOptionPane.showMessageDialog(cards, "You must provide a username and/or host address + port");
        }
        else
        {
            try {
                this.Client = new Client(addr, port, usr);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, "Couldnt make connection to that address", "Connection Failed", HEIGHT, null);
                
            }
            
            
            


            if(this.Client.CONNECTED == true)
            {
                //TODO: Replace this ref pass with event
                this.mic = new Mic(this.Client);

                this.speakers = new Speaker();
                //register as a listener to MessageRecieved events from the thread
                this.Client.setListener(this);

                //register the speakers as a listener of events from the thread (Audio Data)
                this.Client.setAudioListener(this.speakers);

                this.Client.start();
                //card layout - show chat sceen
                CardLayout cl = (CardLayout)(cards.getLayout());
                cl.show(cards, "cardMain");
            }
            
        }
        
        

        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSendMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendMsgActionPerformed
        //Sends the input text to the Client object where it constructs and sends
        // a chatmessage to the server
        String message = inputMessage.getText();
        if(!message.isEmpty())
        {
            Client.WriteMessage(message);
        }
        
        inputMessage.setText("");
    }//GEN-LAST:event_btnSendMsgActionPerformed

    private void btnAudioMSGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAudioMSGActionPerformed
        //Start the mic thread and capture audio
        // UNUSED - See MouseClicked/MouseReleased instead
    }//GEN-LAST:event_btnAudioMSGActionPerformed

    private void btnAudioMSGMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAudioMSGMouseReleased
        // Fire the stop recording event to the Mic class

        this.mic.EndCapture();
        this.mic.interrupt(); 
        //force the thread to shut
        // however the SendAudioStream() method will block until complete
        
    }//GEN-LAST:event_btnAudioMSGMouseReleased

    private void btnAudioMSGMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAudioMSGMousePressed
        //start recording audio
        if(!this.mic.isAlive())
        {
            mic = new Mic(this.Client);
            mic.start();
        }
        else
        {
            System.out.println("Restarting");
        }
        
    }//GEN-LAST:event_btnAudioMSGMousePressed

    private void inputMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputMessageKeyPressed
        //Handles hitting return (enter) in the input to send messages
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnSendMsgActionPerformed(null);
        }
    }//GEN-LAST:event_inputMessageKeyPressed

    private void inputPortKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPortKeyTyped
        //restrict to digits only
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_inputPortKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAudioMSG;
    private javax.swing.JButton btnSendMsg;
    private javax.swing.JPanel cardLogin;
    private javax.swing.JPanel cardMain;
    private javax.swing.JPanel cards;
    private javax.swing.JTextArea chatView;
    private javax.swing.JTextField inputAddr;
    private javax.swing.JTextField inputMessage;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputPort;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
